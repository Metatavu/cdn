(function(){"use strict";var a=function(a,b,c,d){this.initialX=a,this.initialY=b,this.onFail=c,this.onComplete=d,this.reset()};a.prototype.processMove=function(a,b){switch(a){case"up":this.y--;break;case"down":this.y++;break;case"left":this.x--;break;case"right":this.x++;break;default:console.log("Invalid direction")}this.moves++,this.world.draw(),this.world.map.collidesWithWall(this.getPosition())?("function"==typeof this.onFail&&this.onFail(),this.world.status="failed",this.updateQueue.kill(),this.world.reset()):this.world.map.collidesWithGoal(this.getPosition())?("function"==typeof this.onComplete&&this.onComplete(this.moves),this.world.status="completed",this.updateQueue.kill(),this.world.reset()):setTimeout(function(){b()},500)},a.prototype.setWorld=function(a){this.world=a},a.prototype.moveUp=function(){this.updateQueue.push("up")},a.prototype.moveDown=function(){this.updateQueue.push("down")},a.prototype.moveRight=function(){this.updateQueue.push("right")},a.prototype.moveLeft=function(){this.updateQueue.push("left")},a.prototype.stop=function(){this.updateQueue.kill(),this.reset()},a.prototype.getPosition=function(){return{x:this.x,y:this.y}},a.prototype.reset=function(){this.x=this.initialX,this.y=this.initialY,this.moves=0,this.updateQueue=async.queue($.proxy(function(a,b){this.processMove(a,b)},this),1),this.updateQueue.drain=$.proxy(function(){"running"==this.world.status&&this.world.updateFunction(this.world.map,this.world.player)},this)};var b=function(a){this.map=a};b.prototype.collidesWithWall=function(a){return 1==this.map[a.y][a.x]},b.prototype.collidesWithGoal=function(a){return 2==this.map[a.y][a.x]},b.prototype.getArray=function(){return this.map};var c=function(a,b,c){this.map=a,this.player=b,this.element=c,this.player.setWorld(this),this.status="waiting"};c.prototype.begin=function(a){"running"!==this.status&&(this.draw(),this.updateFunction=a,this.status="running",setTimeout($.proxy(function(){this.updateFunction(this.map,this.player)},this),500))},c.prototype.getStatus=function(){return this.status},c.prototype.reset=function(){this.player.reset(),this.status="waiting"},c.prototype.stop=function(){this.player.stop(),this.draw(),this.status="waiting"},c.prototype.draw=function(){for(var a="",b=this.map.getArray(),c=0;c<b.length;c++){for(var d=0;d<b[c].length;d++){var e=this.player.getPosition();e.y==c&&e.x==d?a+="@":2==b[c][d]?a+="█":1==b[c][d]?a+="#":0==b[c][d]&&(a+="░")}a+="\n"}this.element.text(a)},$.widget("custom.metaGame",{options:{map:[],playerInitialPosition:{x:1,y:1},onFail:function(){alert("You fail")},onComplete:function(){alert("You win")}},_create:function(){this._world=new c(new b(this.options.map),new a(this.options.playerInitialPosition.x,this.options.playerInitialPosition.y,this.options.onFail,this.options.onComplete),$("<pre>").appendTo(this.element[0])),this._world.draw()},begin:function(a){this._world.begin(a)},stop:function(){this._world.stop()},_destroy:function(){}})}).call(this);